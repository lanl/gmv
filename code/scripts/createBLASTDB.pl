#!/usr/bin/perl

use strict;
use Getopt::Std;
use Cwd;


sub printOptions
{
	print("Usage :: perl createBLASTDB.pl\n");
	print("-d  Working directory. <REQUIRED> \n");
	print("-c  Blast command directory. <REQUIRED> \n");
	print("-v  Logging level. 1 is ERROR, 2 is WARNING, 3 is INFO. Default is 1.\n");
	print("-l  Log file with complete path. Default - Log messages will be written to standard output.\n");
	print("-p  Perl directory. <REQUIRED> \n");
	print("-s  Scripts directory. <REQUIRED> \n");


}
sub main
{
	our($opt_d,$opt_v,$opt_c,$opt_l,$opt_p,$opt_s);

	getopt("dvclps");

	if((not defined $opt_d) || (not defined $opt_c) || (not defined $opt_p) || (not defined $opt_s))
	{
		printOptions;
		exit(-1);
	
	}

	my $working_dir = $opt_d;
	my $blast_cmd_dir = $opt_c;
	my $log = $opt_v;
	my $log_file = $opt_l;
	my $perl_dir = $opt_p;
	my $scripts_dir = $opt_s;


	if(not defined $log)
	{
		$log = 1;
	}

	my $message = "Logging messages from createBLASTDB.pl......";
	my $priority = 2;
	system "$perl_dir/perl $scripts_dir/logging.pl -v $log -l \'$log_file\' -p $priority -m \'$message\'";



	if(-d "$working_dir/fasta/")
	{
		chdir("$working_dir/fasta/");
	}
	else
	{
		$message = "Directory $working_dir/fasta/ does not exist.";
		$priority = 1;
		system "$perl_dir/perl $scripts_dir/logging.pl -v $log -l \'$log_file\' -p $priority -m \'$message\'";

		exit(-1);
	}

	
	if(-d "$working_dir/blast/")
	{
		system "rm -rf $working_dir/blast/";
	}

	## create the necessary directories for blast in the working directory
	
	chdir("$working_dir");	
	system "mkdir -p blast";
	chdir("blast");
	system "mkdir -p db";
	system "mkdir -p results";
	chdir("$working_dir");

	my $blast_db_file = "$working_dir/blast/db/blast-db";

	## blast db file is the same as the query file. Hence, create a symbolic link to the db file.

	my $blast_query_file = "$working_dir/blast/blast-query";
	system "ln -s $blast_db_file $blast_query_file";
	
	open(BLASTDB,">$blast_db_file") or die("Could not open $blast_db_file\n");

	##change to fasta directory

	chdir("$working_dir/fasta");
	
	my $lst = `ls`;
	my @pcs = split(/\n/,"$lst");



	foreach my $genome_dir (@pcs)
	{
		chomp($genome_dir);


		my $prodigal_protein_dir = "$working_dir/fasta/$genome_dir/prodigal_results/proteins";
		chdir($prodigal_protein_dir);
		##for each protein file in the proteins dir, replace the names generated by prodigal for the proteins with new names - G<i>_D<j>_<k>
		

		my $seq_lst = `ls`;
		my @files = split(/\n/,$seq_lst);

		
		foreach my $file (@files)
		{
			chomp($file);
			if(not $file =~ m/~/)
			{
				if($file =~ m/-proteins/)
				{
					my $protein_file = "$working_dir/fasta/$genome_dir/prodigal_results/proteins/$file";

					open(IN,"$protein_file") or die("Could not open file $protein_file\n");
					my @data = <IN>;	
					close IN;

					foreach my $line (@data)
					{
						print BLASTDB "$line";

					}

				}
				
				
			}

		}
		
	
	}

	close BLASTDB;

	##call formatDB to create Blast database files
	if(not -d "$blast_cmd_dir")
	{

		$message = "Blast command directory does not exist.";
		$priority = 1;
		system "$perl_dir/perl $scripts_dir/logging.pl -v $log -l \'$log_file\' -p $priority -m \'$message\'";

		exit(-1);

	}

	if($log eq 1)
	{
		$message = "Calling BLAST to create database files.";
		$priority = 3;
		system "$perl_dir/perl $scripts_dir/logging.pl -v $log -l \'$log_file\' -p $priority -m \'$message\'";


	}
	system "$blast_cmd_dir/formatdb -i $blast_db_file -p T -o T";

	$message = "Done..";
	$priority = 2;
	system "$perl_dir/perl $scripts_dir/logging.pl -v $log -l \'$log_file\' -p $priority -m \'$message\'";

}


main;
